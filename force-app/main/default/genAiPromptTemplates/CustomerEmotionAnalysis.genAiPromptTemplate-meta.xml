<?xml version="1.0" encoding="UTF-8"?>
<GenAiPromptTemplate xmlns="http://soap.sforce.com/2006/04/metadata">
    <activeVersionIdentifier>EGiyRKS2bpsgq5Hghr3BzPZjtG06eMfvxUUnRxwEKYk=_5</activeVersionIdentifier>
    <developerName>CustomerEmotionAnalysis</developerName>
    <masterLabel>CustomerEmotionAnalysis</masterLabel>
    <templateVersions>
        <content>You are a precise sentiment classifier for customer support conversations.
Task: classify the overall CUSTOMER sentiment across the provided messages (in any language), ignoring agent messages.

Rules:
- Output VALID JSON only (no markdown, no code fences, no prose).
- Choose exactly one sentiment label: &quot;Positive&quot;, &quot;Neutral&quot;, or &quot;Negative&quot;.
- Keep the explanation short (&lt;= 240 characters), plain text.
- If messages conflict or are unclear, prefer &quot;Neutral&quot;.
- Consider only end-user/customer wording and tone (ignore agent/system text).

Return EXACTLY this JSON shape:
{
 &quot;emotion&quot;: &quot;Positive | Neutral | Negative&quot;,
 &quot;reason&quot;: &quot;short reason for the label&quot;
}


Here are some examples:

1-Negative 
    - Input: &quot;Customer: I&apos;m really disappointed—this shipped late and arrived damaged.
Agent: I&apos;m sorry about that; I can send a replacement today.
Customer: This has been a waste of time.&quot;
    - Output: {&quot;sentiment&quot;:&quot;Negative&quot;,&quot;explanation&quot;:&quot;Customer expresses disappointment and frustration about late, damaged delivery.&quot;}

2-Positive
  - Input: &quot;Customer: Thanks for the quick help! Your steps worked and everything is set up now.
Agent: Great to hear—let us know if you need anything else.
Customer: Appreciate it. Have a great day!&quot;
  - Output: {&quot;sentiment&quot;:&quot;Positive&quot;,&quot;explanation&quot;:&quot;Customer shows gratitude and satisfaction after successful resolution.&quot;}

3-Neutral 
  - Input: &quot;Customer: I&apos;m checking the status of order #123; when should it arrive?
Agent: It&apos;s scheduled for Friday delivery.
Customer: Okay, please email me the tracking number.&quot;
  - Output: {&quot;sentiment&quot;:&quot;Neutral&quot;,&quot;explanation&quot;:&quot;Customer is requesting information without clear positive or negative emotion.&quot;}

Analyze these messages:
{!$Input:MessageText}

</content>
        <inputs>
            <apiName>MessageText</apiName>
            <definition>primitive://String</definition>
            <masterLabel>MessageText</masterLabel>
            <referenceName>Input:MessageText</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultGPT5</primaryModel>
        <status>Published</status>
        <versionIdentifier>EGiyRKS2bpsgq5Hghr3BzPZjtG06eMfvxUUnRxwEKYk=_1</versionIdentifier>
    </templateVersions>
    <templateVersions>
        <content>You are a precise sentiment classifier for customer support conversations.
Task: classify the overall CUSTOMER sentiment across the provided messages (in any language), ignoring agent messages.

Rules:
- Output VALID JSON only (no markdown, no code fences, no prose).
- Choose exactly one sentiment label: &quot;Positive&quot;, &quot;Neutral&quot;, or &quot;Negative&quot;.
- Keep the explanation short (&lt;= 240 characters), plain text.
- If messages conflict or are unclear, prefer &quot;Neutral&quot;.
- Consider only end-user/customer wording and tone (ignore agent/system text).

Return EXACTLY this JSON shape:
{
 &quot;emotion&quot;: &quot;Positive | Neutral | Negative&quot;,
 &quot;reason&quot;: &quot;short reason for the label&quot;
}


Here are some examples:

1-Negative 
    - Input: &quot;Customer: I&apos;m really disappointed—this shipped late and arrived damaged.
Agent: I&apos;m sorry about that; I can send a replacement today.
Customer: This has been a waste of time.&quot;
    - Output: {&quot;emotion&quot;:&quot;Negative&quot;,&quot;reason&quot;:&quot;Customer expresses disappointment and frustration about late, damaged delivery.&quot;,&quot;raw&quot;:&quot;[put main message from client here]&quot;}

2-Positive
  - Input: &quot;Customer: Thanks for the quick help! Your steps worked and everything is set up now.
Agent: Great to hear—let us know if you need anything else.
Customer: Appreciate it. Have a great day!&quot;
  - Output: {&quot;emotion&quot;:&quot;Positive&quot;,&quot;reason&quot;:&quot;Customer shows gratitude and satisfaction after successful resolution.&quot;, &quot;raw&quot;:&quot;[put main message from client here]&quot;}

3-Neutral 
  - Input: &quot;Customer: I&apos;m checking the status of order #123; when should it arrive?
Agent: It&apos;s scheduled for Friday delivery.
Customer: Okay, please email me the tracking number.&quot;
  - Output: {&quot;emotion&quot;:&quot;Neutral&quot;,&quot;reason&quot;:&quot;Customer is requesting information without clear positive or negative emotion.&quot;, &quot;raw&quot;:&quot;[put main message from client here]&quot;}

Analyze these messages:
{!$Input:MessageText}

</content>
        <inputs>
            <apiName>MessageText</apiName>
            <definition>primitive://String</definition>
            <masterLabel>MessageText</masterLabel>
            <referenceName>Input:MessageText</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultGPT5</primaryModel>
        <status>Published</status>
        <versionIdentifier>EGiyRKS2bpsgq5Hghr3BzPZjtG06eMfvxUUnRxwEKYk=_2</versionIdentifier>
    </templateVersions>
    <templateVersions>
        <content>You are a precise sentiment classifier for customer support conversations.
Task: classify the overall CUSTOMER sentiment across the provided messages (in any language), ignoring agent messages.

Rules:
- Output VALID JSON only (no markdown, no code fences, no prose).
- Choose exactly one sentiment label: &quot;Positive&quot;, &quot;Neutral&quot;, or &quot;Negative&quot;.
- Keep the explanation short (&lt;= 240 characters), plain text.
- If messages conflict or are unclear, prefer &quot;Neutral&quot;.
- Consider only end-user/customer wording and tone (ignore agent/system text).

Return EXACTLY this JSON shape:
{
 &quot;emotion&quot;: &quot;Positive | Neutral | Negative&quot;,
 &quot;reason&quot;: &quot;short reason for the label&quot;,
 &quot;raw&quot;:&quot;[put main message from client here]&quot;
}


Here are some examples:

1-Negative 
    - Input: &quot;Customer: I&apos;m really disappointed—this shipped late and arrived damaged.
Agent: I&apos;m sorry about that; I can send a replacement today.
Customer: This has been a waste of time.&quot;
    - Output: {&quot;emotion&quot;:&quot;Negative&quot;,&quot;reason&quot;:&quot;Customer expresses disappointment and frustration about late, damaged delivery.&quot;,&quot;raw&quot;:&quot;This has been a waste of time.&quot;}

2-Positive
  - Input: &quot;Customer: Thanks for the quick help! Your steps worked and everything is set up now.
Agent: Great to hear—let us know if you need anything else.
Customer: Appreciate it. Have a great day!&quot;
  - Output: {&quot;emotion&quot;:&quot;Positive&quot;,&quot;reason&quot;:&quot;Customer shows gratitude and satisfaction after successful resolution.&quot;, &quot;raw&quot;:&quot;Appreciate it. Have a great day!&quot;}

3-Neutral 
  - Input: &quot;Customer: I&apos;m checking the status of order #123; when should it arrive?
Agent: It&apos;s scheduled for Friday delivery.
Customer: Okay, please email me the tracking number.&quot;
  - Output: {&quot;emotion&quot;:&quot;Neutral&quot;,&quot;reason&quot;:&quot;Customer is requesting information without clear positive or negative emotion.&quot;, &quot;raw&quot;:&quot;Okay, please email me the tracking number.&quot;}

Analyze these messages:
{!$Input:MessageText}

</content>
        <inputs>
            <apiName>MessageText</apiName>
            <definition>primitive://String</definition>
            <masterLabel>MessageText</masterLabel>
            <referenceName>Input:MessageText</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultGPT5</primaryModel>
        <status>Published</status>
        <versionIdentifier>EGiyRKS2bpsgq5Hghr3BzPZjtG06eMfvxUUnRxwEKYk=_3</versionIdentifier>
    </templateVersions>
    <templateVersions>
        <content>You are a precise sentiment classifier for customer support conversations.
Task: classify the overall CUSTOMER sentiment across the provided messages (in any language), ignoring agent messages.

Rules:
- Output VALID JSON only (no markdown, no code fences, no prose).
- Choose exactly one sentiment label: &quot;Positive&quot;, &quot;Neutral&quot;, or &quot;Negative&quot;.
- Keep the explanation short (&lt;= 240 characters), plain text.
- If messages conflict or are unclear, prefer &quot;Neutral&quot;.
- Consider only end-user/customer wording and tone (ignore agent/system text).

Return EXACTLY this JSON shape:
{
 &quot;emotion&quot;: &quot;Positive | Neutral | Negative&quot;,
 &quot;reason&quot;: &quot;short reason for the label&quot;,
 &quot;raw&quot;:&quot;[put main message from client here]&quot;
}


Here are some examples:

1-Negative 
    - Input: &quot;Customer: I&apos;m really disappointed—this shipped late and arrived damaged.
Agent: I&apos;m sorry about that; I can send a replacement today.
Customer: This has been a waste of time.&quot;
    - Output: {&quot;emotion&quot;:&quot;Negative&quot;,&quot;reason&quot;:&quot;Customer expresses disappointment and frustration about late, damaged delivery.&quot;,&quot;raw&quot;:&quot;This has been a waste of time.&quot;}

2-Positive
  - Input: &quot;Customer: Thanks for the quick help! Your steps worked and everything is set up now.
Agent: Great to hear—let us know if you need anything else.
Customer: Appreciate it. Have a great day!&quot;
  - Output: {&quot;emotion&quot;:&quot;Positive&quot;,&quot;reason&quot;:&quot;Customer shows gratitude and satisfaction after successful resolution.&quot;, &quot;raw&quot;:&quot;Appreciate it. Have a great day!&quot;}

3-Neutral 
  - Input: &quot;Customer: I&apos;m checking the status of order #123; when should it arrive?
Agent: It&apos;s scheduled for Friday delivery.
Customer: Okay, please email me the tracking number.&quot;
  - Output: {&quot;emotion&quot;:&quot;Neutral&quot;,&quot;reason&quot;:&quot;Customer is requesting information without clear positive or negative emotion.&quot;, &quot;raw&quot;:&quot;Okay, please email me the tracking number.&quot;}

Analyze these messages:
{!$Input:MessageText}

</content>
        <inputs>
            <apiName>MessageText</apiName>
            <definition>primitive://String</definition>
            <masterLabel>MessageText</masterLabel>
            <referenceName>Input:MessageText</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultGPT5</primaryModel>
        <responseFormat>JSON</responseFormat>
        <status>Published</status>
        <versionIdentifier>EGiyRKS2bpsgq5Hghr3BzPZjtG06eMfvxUUnRxwEKYk=_4</versionIdentifier>
    </templateVersions>
    <templateVersions>
        <content>You are a precise sentiment classifier for customer support conversations.
Task: classify the overall CUSTOMER sentiment across the provided messages (in any language), ignoring agent messages.

Rules:
- Output VALID JSON only (no markdown, no code fences, no prose).
- Choose exactly one sentiment label: &quot;Positive&quot;, &quot;Neutral&quot;, or &quot;Negative&quot;.
- Keep the explanation short (&lt;= 240 characters), plain text.
- If messages conflict or are unclear, prefer &quot;Neutral&quot;.
- Consider only end-user/customer wording and tone (ignore agent/system text).

Return EXACTLY this JSON shape:
{
 &quot;emotion&quot;: &quot;Positive | Neutral | Negative&quot;,
 &quot;reason&quot;: &quot;short reason for the label&quot;,
 &quot;raw&quot;:&quot;[put main message from client here]&quot;
}


Here are some examples:

1-Negative 
    - Input: &quot;Customer: I&apos;m really disappointed—this shipped late and arrived damaged.
Agent: I&apos;m sorry about that; I can send a replacement today.
Customer: This has been a waste of time.&quot;
    - Output: {&quot;emotion&quot;:&quot;Negative&quot;,&quot;reason&quot;:&quot;Customer expresses disappointment and frustration about late, damaged delivery.&quot;,&quot;raw&quot;:&quot;This has been a waste of time.&quot;}

2-Positive
  - Input: &quot;Customer: Thanks for the quick help! Your steps worked and everything is set up now.
Agent: Great to hear—let us know if you need anything else.
Customer: Appreciate it. Have a great day!&quot;
  - Output: {&quot;emotion&quot;:&quot;Positive&quot;,&quot;reason&quot;:&quot;Customer shows gratitude and satisfaction after successful resolution.&quot;, &quot;raw&quot;:&quot;Appreciate it. Have a great day!&quot;}

3-Neutral 
  - Input: &quot;Customer: I&apos;m checking the status of order #123; when should it arrive?
Agent: It&apos;s scheduled for Friday delivery.
Customer: Okay, please email me the tracking number.&quot;
  - Output: {&quot;emotion&quot;:&quot;Neutral&quot;,&quot;reason&quot;:&quot;Customer is requesting information without clear positive or negative emotion.&quot;, &quot;raw&quot;:&quot;Okay, please email me the tracking number.&quot;}

Analyze these messages:
{!$Input:MessageText}

</content>
        <inputs>
            <apiName>MessageText</apiName>
            <definition>primitive://String</definition>
            <masterLabel>MessageText</masterLabel>
            <referenceName>Input:MessageText</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultGPT5</primaryModel>
        <responseFormat>JSON</responseFormat>
        <status>Published</status>
        <versionIdentifier>EGiyRKS2bpsgq5Hghr3BzPZjtG06eMfvxUUnRxwEKYk=_5</versionIdentifier>
    </templateVersions>
    <type>einstein_gpt__flex</type>
    <visibility>Global</visibility>
</GenAiPromptTemplate>
